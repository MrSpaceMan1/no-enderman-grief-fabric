# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17,    # Current Java LTS & minimum supported by Minecraft
        ]
        # and run on both Linux and Windows
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
        
      - name: Setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'
          
      - name: Make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
        
      - name: Build
        run: ./gradlew build

      - name: Publish (GitHub)
        uses: Kir-Antipov/mc-publish@v3.2
        with:
          github-tag: "v${{env.VERSION}}"
          github-token: "${{secrets.GHUB_TOKEN}}"
  
          name: "No Enderman Grief"
          version: "${{env.VERSION}}"
          version-type: release
  
          loaders: fabric
          game-versions: "${{env.MINECRAFT_VERSION}}"
          java: "${{env.JAVA_VERSION}}"
      # - name: capture build artifacts
      #   if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: Artifacts
      #     path: build/libs/
